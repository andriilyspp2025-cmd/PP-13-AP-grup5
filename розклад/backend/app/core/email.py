from typing import List
from datetime import datetime, timedelta
from jose import jwt
from app.core.config import settings
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart


def create_verification_token(email: str) -> str:
    """Create email verification token."""
    expire = datetime.utcnow() + timedelta(hours=24)
    to_encode = {"sub": email, "exp": expire, "type": "email_verification"}
    return jwt.encode(to_encode, settings.SECRET_KEY, algorithm=settings.ALGORITHM)


def verify_token(token: str) -> str:
    """Verify email verification token and return email."""
    try:
        payload = jwt.decode(token, settings.SECRET_KEY, algorithms=[settings.ALGORITHM])
        email: str = payload.get("sub")
        token_type: str = payload.get("type")
        
        if token_type != "email_verification":
            return None
        return email
    except:
        return None


def send_verification_email(email: str, token: str):
    """Send verification email to user."""
    # –í production –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π SMTP —Å–µ—Ä–≤–µ—Ä
    # –ó–∞—Ä–∞–∑ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥—É—î–º–æ —Ç–æ–∫–µ–Ω
    verification_url = f"{settings.FRONTEND_URL}/verify-email?token={token}"
    
    print(f"\n{'='*60}")
    print(f"üìß EMAIL VERIFICATION")
    print(f"{'='*60}")
    print(f"To: {email}")
    print(f"Subject: –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è email - Rozklad")
    print(f"\n–ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è:")
    print(f"{verification_url}")
    print(f"{'='*60}\n")
    
    # –Ø–∫—â–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π SMTP:
    try:
        if settings.MAIL_USERNAME and settings.MAIL_PASSWORD:
            print(f"üì§ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ email —á–µ—Ä–µ–∑ SMTP...")
            send_smtp_email(
                to_email=email,
                subject="–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è email - Rozklad",
                body=f"""
                <html>
                <body style="font-family: Arial, sans-serif; padding: 20px;">
                    <div style="max-width: 600px; margin: 0 auto; background: #f9fafb; padding: 30px; border-radius: 10px;">
                        <h1 style="color: #0ea5e9;">–í—ñ—Ç–∞—î–º–æ –≤ Rozklad!</h1>
                        <p style="font-size: 16px; color: #374151;">
                            –î—è–∫—É—î–º–æ –∑–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é! –ë—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å —Å–≤–æ—é email –∞–¥—Ä–µ—Å—É, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ:
                        </p>
                        <div style="text-align: center; margin: 30px 0;">
                            <a href="{verification_url}" 
                               style="background: #0ea5e9; color: white; padding: 15px 30px; 
                                      text-decoration: none; border-radius: 5px; font-weight: bold;
                                      display: inline-block;">
                                –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ Email
                            </a>
                        </div>
                        <p style="color: #6b7280; font-size: 14px;">
                            –ê–±–æ —Å–∫–æ–ø—ñ—é–π—Ç–µ —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —É –±—Ä–∞—É–∑–µ—Ä:<br>
                            <a href="{verification_url}" style="color: #0ea5e9;">{verification_url}</a>
                        </p>
                        <p style="color: #9ca3af; font-size: 12px; margin-top: 30px;">
                            –ü–æ—Å–∏–ª–∞–Ω–Ω—è –¥—ñ–π—Å–Ω–µ –ø—Ä–æ—Ç—è–≥–æ–º 24 –≥–æ–¥–∏–Ω.
                        </p>
                    </div>
                </body>
                </html>
                """
            )
            print(f"‚úÖ Email —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {email}!")
        else:
            print(f"‚ö†Ô∏è SMTP –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π. Email –ù–ï –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email: {e}")
        import traceback
        traceback.print_exc()


def send_smtp_email(to_email: str, subject: str, body: str):
    """Send email using SMTP."""
    msg = MIMEMultipart('alternative')
    msg['Subject'] = subject
    msg['From'] = settings.MAIL_FROM
    msg['To'] = to_email
    
    html_part = MIMEText(body, 'html')
    msg.attach(html_part)
    
    with smtplib.SMTP(settings.MAIL_SERVER, settings.MAIL_PORT) as server:
        if settings.MAIL_TLS:
            server.starttls()
        server.login(settings.MAIL_USERNAME, settings.MAIL_PASSWORD)
        server.send_message(msg)


def send_password_reset_email(email: str, token: str):
    """Send password reset email."""
    reset_url = f"{settings.FRONTEND_URL}/reset-password?token={token}"
    
    print(f"\n{'='*60}")
    print(f"üîê PASSWORD RESET")
    print(f"{'='*60}")
    print(f"To: {email}")
    print(f"Subject: –°–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—é - Rozklad")
    print(f"\n–ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—é:")
    print(f"{reset_url}")
    print(f"{'='*60}\n")

